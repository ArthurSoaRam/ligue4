#[derive(Clone, Copy)]
enum Espa√ßoTabuleiro {
    Vazio,
    Jogador1,
    Jogador2,
}

impl Espa√ßoTabuleiro {
    fn print_espa√ßo(&self) {
        match self {
            Espa√ßoTabuleiro::Vazio => print!("‚ö´"),
            Espa√ßoTabuleiro::Jogador1 => print!("üîµ"),
            Espa√ßoTabuleiro::Jogador2 => print!("üî¥"),
        }
    }
}

struct Jogo {
    //tabuleiro com 6 linhas e 7 colunas, come√ßando da ponta superior esquerda
    tabuleiro: [[Espa√ßoTabuleiro; 6]; 7],
    vez_de: Espa√ßoTabuleiro,
}

impl Jogo {
    fn novo() -> Self {
        Self {
            tabuleiro: [[Espa√ßoTabuleiro::Vazio; 6]; 7],
            vez_de: Espa√ßoTabuleiro::Jogador1,
        }
    }

    fn print_tabuleiro(&self) {
        for i in 0..6 {
            for j in 0..7 {
                self.tabuleiro[j][i].print_espa√ßo();
            }
            println!();
        }
    }
}

fn main() {
    let mut jogo = Jogo::novo();
    
    jogo.print_tabuleiro();
}
